import pinoHttp from 'pino-http';
import Logger from '@/config/logger.config';

const httpLogger = pinoHttp({
  logger: Logger,
  redact: {
    paths: ['req', 'res', 'responseTime', 'err'],
    remove: true,
  },
  transport: {
    target: 'pino-http-print', // use the pino-http-print transport and its formatting output
    options: {
      destination: 1,
      all: true,
      translateTime: true,
    },
  },
  customLogLevel: function (_, res, err) {
    if (err) {
      return 'error'; // Erreur serveur ou autre
    } else if (res.statusCode >= 500) {
      return 'error'; // Erreurs 5xx
    } else if (res.statusCode >= 400) {
      return 'warn'; // Erreurs 4xx
    } else if (res.statusCode >= 300 && res.statusCode < 400) {
      return 'debug'; // Redirections
    }
    return 'info'; // RÃ©ponses 2xx
  },
  customSuccessMessage(req, res, responseTime) {
    const clientIp = req.headers['x-forwarded-for'] || req.socket.remoteAddress;
    return `${req.method} ${req.url} ${res.statusCode} ${responseTime}ms - IP: ${clientIp}`;
  },
});

export default httpLogger;
